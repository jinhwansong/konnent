GitHub Actions 워크플로우를 전체적으로 검토한 결과, 앞서 발생한 오류의 원인과 해결 방법을 찾을 수 있었습니다. 다음과 같이 워크플로우 파일을 수정하면 문제를 해결할 수 있을 것입니다:
yamlCopyname: Deploy to EC2  # main 브랜치에 push할 때 실행

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Node.js 설정
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'
      
      # 의존성 설치
      - name: Install dependencies
        run: |
          cd backend
          npm ci
      
      # 프로젝트 빌드
      - name: Build
        run: |
          cd backend
          npm run build
      
      # 배포 패키지 생성
      - name: Create deployment package
        run: |
          cd backend
          mkdir -p ../deployment
          cp -r dist package.json package-lock.json ../deployment/
          cd ../deployment && zip -r ../deployment.zip .
      
      # EC2로 파일 전송
      - name: Upload to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "deployment.zip"
          target: "~/deployment"
      
      # EC2에서 배포 실행
      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 필요한 도구 설치 확인
            sudo apt-get update
            sudo apt-get install -y unzip
            
            # 배포 디렉토리 준비
            mkdir -p ~/deployment/temp
            cd ~/deployment
            unzip -o deployment.zip -d temp
            
            # 백엔드 디렉토리에 파일 복사
            mkdir -p ~/konnent/backend
            cp -a temp/. ~/konnent/backend/
            
            # Node.js 환경 설정 및 의존성 설치
            cd ~/konnent/backend
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            nvm use 22 || nvm install 22  # 버전이 없으면 설치
            
            # npmrc 충돌 해결
            nvm use --delete-prefix 22 --silent
            
            # pm2 설치 확인
            npm install -g pm2
            
            # 프로덕션 의존성만 설치
            npm ci --production
            
            # 애플리케이션 재시작
            pm2 delete konnect-backend || true
            pm2 start npm --name "konnect-backend" -- run start:prod
            
            # 로그 확인을 위한 출력
            echo "Deployment completed successfully!"